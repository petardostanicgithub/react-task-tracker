{"version":3,"sources":["Task.js","Tasks.js","App.js","index.js"],"names":["Task","task","checkToggle","className","name","style","paddingLeft","type","checked","complete","onChange","id","Tasks","tasks","map","LOCAL_STORAGE_KEY","App","useState","updateTasks","taskNameRef","useRef","useEffect","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","ref","placeholder","filter","length","role","onClick","e","current","value","previousTasks","uuidv4","newTasks","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAceA,EAZF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YAIjB,OACI,qBAAIC,UAAU,kBAAd,UACKF,EAAKG,KACN,qBAAKC,MAAO,CAACC,YAAa,QAA1B,SAAmC,uBAAOH,UAAU,mBAAmBI,KAAK,WAAWC,QAASP,EAAKQ,SAAUC,SANvH,WACIR,EAAYD,EAAKU,aCOVC,EARD,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOX,EAAiB,EAAjBA,YACnB,OACIW,EAAMC,KAAI,SAAAb,GACN,OAAO,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,YAAaA,GAAlCD,EAAKU,Q,QCF7BI,EAAoB,2BAqDXC,MAnDf,WACE,MAA6BC,mBAAS,IAAtC,mBAAOJ,EAAP,KAAcK,EAAd,KACMC,EAAcC,mBAgCpB,OA9BAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAAYI,KAC5B,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUf,MACtD,CAACA,IAwBF,sBAAKV,UAAU,iBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBAAO0B,IAAKV,EAAcZ,KAAK,OAAOJ,UAAU,eAAe2B,YAAY,kBAAkB,aAAW,sBAE1G,sBAAK3B,UAAU,OAAf,UAAuBU,EAAMkB,QAAO,SAAA9B,GAAI,OAAKA,EAAKQ,YAAUuB,OAA5D,iBACA,sBAAK7B,UAAU,iBAAiB8B,KAAK,QAAQ,aAAW,eAAxD,UACE,wBAAQ1B,KAAK,SAASJ,UAAU,kBAAkB+B,QArBxD,SAAiBC,GACf,IAAM/B,EAAOe,EAAYiB,QAAQC,MACpB,KAATjC,IACJc,GAAY,SAAAoB,GACV,MAAM,GAAN,mBAAWA,GAAX,CAA0B,CAAC3B,GAAI4B,cAAUnC,KAAMA,EAAMK,UAAU,QAEjEU,EAAYiB,QAAQC,MAAQ,OAexB,wBACA,wBAAQ9B,KAAK,SAASJ,UAAU,iBAAiB+B,QAbvD,WACE,IAAMM,EAAW3B,EAAMkB,QAAO,SAAA9B,GAAI,OAAKA,EAAKQ,YAC5CS,EAAYsB,IAWR,gCAEF,oBAAIrC,UAAU,aAAd,SACE,cAAC,EAAD,CAAOU,MAAOA,EAAOX,YAhC3B,SAAqBS,GACnB,IAAM6B,EAAQ,YAAO3B,GACfZ,EAAOuC,EAASC,MAAK,SAAAxC,GAAI,OAAIA,EAAKU,KAAOA,KAC/CV,EAAKQ,UAAYR,EAAKQ,SACtBS,EAAYsB,YClBhBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aa420f28.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Task = ({task, checkToggle}) => {\r\n    function checkClick() {\r\n        checkToggle(task.id)\r\n    }\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            {task.name}\r\n            <div style={{paddingLeft: \"20px\"}}><input className=\"form-check-input\" type=\"checkbox\" checked={task.complete} onChange={checkClick} /></div>  \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task","import React from 'react'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({tasks, checkToggle}) => {\r\n    return (\r\n        tasks.map(task => {\r\n            return <Task key={task.id} task={task} checkToggle={checkToggle} />\r\n        })\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState, useRef, useEffect} from \"react\";\nimport Tasks from \"./Tasks\";\nimport {v4 as uuidv4} from \"uuid\"\n\nconst LOCAL_STORAGE_KEY = 'react-task-tracker-tasks'\n\nfunction App() {\n  const [tasks, updateTasks] = useState([])\n  const taskNameRef = useRef();\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTasks) updateTasks(storedTasks)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(tasks))\n  }, [tasks])\n  \n  function checkToggle(id) {\n    const newTasks = [...tasks]\n    const task = newTasks.find(task => task.id === id)\n    task.complete = !task.complete\n    updateTasks(newTasks)\n  }\n\n  function addTask(e) {\n    const name = taskNameRef.current.value\n    if (name === '') return\n    updateTasks(previousTasks => {\n      return [...previousTasks, {id: uuidv4(), name: name, complete: false}]\n    })\n    taskNameRef.current.value = null\n  }\n\n  function clearComplete() {\n    const newTasks = tasks.filter(task => !task.complete)\n    updateTasks(newTasks)\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"input-group mb-3\">\n        <input ref={taskNameRef}  type=\"text\" className=\"form-control\" placeholder=\"Enter a task...\" aria-label=\"Enter a task...\"  />\n      </div>\n      <div className=\"mb-3\">{tasks.filter(task => !task.complete).length} tasks left</div>\n      <div className=\"btn-group mb-5\" role=\"group\" aria-label=\"Button group\">\n        <button type=\"button\" className=\"btn btn-primary\" onClick={addTask}>Add a task</button>\n        <button type=\"button\" className=\"btn btn-danger\" onClick={clearComplete}>Clear completed</button>\n      </div>\n      <ul className=\"list-group\">\n        <Tasks tasks={tasks} checkToggle={checkToggle}/>\n      </ul>\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}